{"id":"node_modules/rfc6902/index.js","dependencies":[{"name":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\package.json","includedInParent":true,"mtime":1672826403432},{"name":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\package.json","includedInParent":true,"mtime":1672823284034},{"name":"./pointer","loc":{"line":4,"column":24,"index":174},"parent":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\index.js","resolved":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\pointer.js"},{"name":"./patch","loc":{"line":5,"column":22,"index":210},"parent":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\index.js","resolved":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\patch.js"},{"name":"./diff","loc":{"line":6,"column":21,"index":243},"parent":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\index.js","resolved":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\diff.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTests = exports.createPatch = exports.applyPatch = void 0;\nvar pointer_1 = require(\"./pointer\");\nvar patch_1 = require(\"./patch\");\nvar diff_1 = require(\"./diff\");\n/**\nApply a 'application/json-patch+json'-type patch to an object.\n\n`patch` *must* be an array of operations.\n\n> Operation objects MUST have exactly one \"op\" member, whose value\n> indicates the operation to perform.  Its value MUST be one of \"add\",\n> \"remove\", \"replace\", \"move\", \"copy\", or \"test\"; other values are\n> errors.\n\nThis method mutates the target object in-place.\n\n@returns list of results, one for each operation: `null` indicated success,\n         otherwise, the result will be an instance of one of the Error classes:\n         MissingError, InvalidOperationError, or TestError.\n*/\nfunction applyPatch(object, patch) {\n    return patch.map(function (operation) { return patch_1.apply(object, operation); });\n}\nexports.applyPatch = applyPatch;\nfunction wrapVoidableDiff(diff) {\n    function wrappedDiff(input, output, ptr) {\n        var custom_patch = diff(input, output, ptr);\n        // ensure an array is always returned\n        return Array.isArray(custom_patch) ? custom_patch : diff_1.diffAny(input, output, ptr, wrappedDiff);\n    }\n    return wrappedDiff;\n}\n/**\nProduce a 'application/json-patch+json'-type patch to get from one object to\nanother.\n\nThis does not alter `input` or `output` unless they have a property getter with\nside-effects (which is not a good idea anyway).\n\n`diff` is called on each pair of comparable non-primitive nodes in the\n`input`/`output` object trees, producing nested patches. Return `undefined`\nto fall back to default behaviour.\n\nReturns list of operations to perform on `input` to produce `output`.\n*/\nfunction createPatch(input, output, diff) {\n    var ptr = new pointer_1.Pointer();\n    // a new Pointer gets a default path of [''] if not specified\n    return (diff ? wrapVoidableDiff(diff) : diff_1.diffAny)(input, output, ptr);\n}\nexports.createPatch = createPatch;\n/**\nCreate a test operation based on `input`'s current evaluation of the JSON\nPointer `path`; if such a pointer cannot be resolved, returns undefined.\n*/\nfunction createTest(input, path) {\n    var endpoint = pointer_1.Pointer.fromJSON(path).evaluate(input);\n    if (endpoint !== undefined) {\n        return { op: 'test', path: path, value: endpoint.value };\n    }\n}\n/**\nProduce an 'application/json-patch+json'-type list of tests, to verify that\nexisting values in an object are identical to the those captured at some\ncheckpoint (whenever this function is called).\n\nThis does not alter `input` or `output` unless they have a property getter with\nside-effects (which is not a good idea anyway).\n\nReturns list of test operations.\n*/\nfunction createTests(input, patch) {\n    var tests = new Array();\n    patch.filter(diff_1.isDestructive).forEach(function (operation) {\n        var pathTest = createTest(input, operation.path);\n        if (pathTest)\n            tests.push(pathTest);\n        if ('from' in operation) {\n            var fromTest = createTest(input, operation.from);\n            if (fromTest)\n                tests.push(fromTest);\n        }\n    });\n    return tests;\n}\nexports.createTests = createTests;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rfc6902/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rfc6902/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}}],"sources":{"node_modules/rfc6902/index.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTests = exports.createPatch = exports.applyPatch = void 0;\nvar pointer_1 = require(\"./pointer\");\nvar patch_1 = require(\"./patch\");\nvar diff_1 = require(\"./diff\");\n/**\nApply a 'application/json-patch+json'-type patch to an object.\n\n`patch` *must* be an array of operations.\n\n> Operation objects MUST have exactly one \"op\" member, whose value\n> indicates the operation to perform.  Its value MUST be one of \"add\",\n> \"remove\", \"replace\", \"move\", \"copy\", or \"test\"; other values are\n> errors.\n\nThis method mutates the target object in-place.\n\n@returns list of results, one for each operation: `null` indicated success,\n         otherwise, the result will be an instance of one of the Error classes:\n         MissingError, InvalidOperationError, or TestError.\n*/\nfunction applyPatch(object, patch) {\n    return patch.map(function (operation) { return patch_1.apply(object, operation); });\n}\nexports.applyPatch = applyPatch;\nfunction wrapVoidableDiff(diff) {\n    function wrappedDiff(input, output, ptr) {\n        var custom_patch = diff(input, output, ptr);\n        // ensure an array is always returned\n        return Array.isArray(custom_patch) ? custom_patch : diff_1.diffAny(input, output, ptr, wrappedDiff);\n    }\n    return wrappedDiff;\n}\n/**\nProduce a 'application/json-patch+json'-type patch to get from one object to\nanother.\n\nThis does not alter `input` or `output` unless they have a property getter with\nside-effects (which is not a good idea anyway).\n\n`diff` is called on each pair of comparable non-primitive nodes in the\n`input`/`output` object trees, producing nested patches. Return `undefined`\nto fall back to default behaviour.\n\nReturns list of operations to perform on `input` to produce `output`.\n*/\nfunction createPatch(input, output, diff) {\n    var ptr = new pointer_1.Pointer();\n    // a new Pointer gets a default path of [''] if not specified\n    return (diff ? wrapVoidableDiff(diff) : diff_1.diffAny)(input, output, ptr);\n}\nexports.createPatch = createPatch;\n/**\nCreate a test operation based on `input`'s current evaluation of the JSON\nPointer `path`; if such a pointer cannot be resolved, returns undefined.\n*/\nfunction createTest(input, path) {\n    var endpoint = pointer_1.Pointer.fromJSON(path).evaluate(input);\n    if (endpoint !== undefined) {\n        return { op: 'test', path: path, value: endpoint.value };\n    }\n}\n/**\nProduce an 'application/json-patch+json'-type list of tests, to verify that\nexisting values in an object are identical to the those captured at some\ncheckpoint (whenever this function is called).\n\nThis does not alter `input` or `output` unless they have a property getter with\nside-effects (which is not a good idea anyway).\n\nReturns list of test operations.\n*/\nfunction createTests(input, patch) {\n    var tests = new Array();\n    patch.filter(diff_1.isDestructive).forEach(function (operation) {\n        var pathTest = createTest(input, operation.path);\n        if (pathTest)\n            tests.push(pathTest);\n        if ('from' in operation) {\n            var fromTest = createTest(input, operation.from);\n            if (fromTest)\n                tests.push(fromTest);\n        }\n    });\n    return tests;\n}\nexports.createTests = createTests;\n"},"lineCount":89}},"error":null,"hash":"be323e45019aebeb2a0e4f7c05f47614","cacheData":{"env":{}}}