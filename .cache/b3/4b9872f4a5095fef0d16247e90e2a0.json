{"id":"node_modules/rfc6902/util.js","dependencies":[{"name":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\package.json","includedInParent":true,"mtime":1672826403432},{"name":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\package.json","includedInParent":true,"mtime":1672823284034}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = exports.objectType = exports.hasOwnProperty = void 0;\nexports.hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction objectType(object) {\n    if (object === undefined) {\n        return 'undefined';\n    }\n    if (object === null) {\n        return 'null';\n    }\n    if (Array.isArray(object)) {\n        return 'array';\n    }\n    return typeof object;\n}\nexports.objectType = objectType;\nfunction isNonPrimitive(value) {\n    // loose-equality checking for null is faster than strict checking for each of null/undefined/true/false\n    // checking null first, then calling typeof, is faster than vice-versa\n    return value != null && typeof value == 'object';\n}\n/**\nRecursively copy a value.\n\n@param source - should be a JavaScript primitive, Array, Date, or (plain old) Object.\n@returns copy of source where every Array and Object have been recursively\n         reconstructed from their constituent elements\n*/\nfunction clone(source) {\n    if (!isNonPrimitive(source)) {\n        // short-circuiting is faster than a single return\n        return source;\n    }\n    // x.constructor == Array is the fastest way to check if x is an Array\n    if (source.constructor == Array) {\n        // construction via imperative for-loop is faster than source.map(arrayVsObject)\n        var length_1 = source.length;\n        // setting the Array length during construction is faster than just `[]` or `new Array()`\n        var arrayTarget = new Array(length_1);\n        for (var i = 0; i < length_1; i++) {\n            arrayTarget[i] = clone(source[i]);\n        }\n        return arrayTarget;\n    }\n    // Date\n    if (source.constructor == Date) {\n        var dateTarget = new Date(+source);\n        return dateTarget;\n    }\n    // Object\n    var objectTarget = {};\n    // declaring the variable (with const) inside the loop is faster\n    for (var key in source) {\n        // hasOwnProperty costs a bit of performance, but it's semantically necessary\n        // using a global helper is MUCH faster than calling source.hasOwnProperty(key)\n        if (exports.hasOwnProperty.call(source, key)) {\n            objectTarget[key] = clone(source[key]);\n        }\n    }\n    return objectTarget;\n}\nexports.clone = clone;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rfc6902/util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rfc6902/util.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"node_modules/rfc6902/util.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = exports.objectType = exports.hasOwnProperty = void 0;\nexports.hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction objectType(object) {\n    if (object === undefined) {\n        return 'undefined';\n    }\n    if (object === null) {\n        return 'null';\n    }\n    if (Array.isArray(object)) {\n        return 'array';\n    }\n    return typeof object;\n}\nexports.objectType = objectType;\nfunction isNonPrimitive(value) {\n    // loose-equality checking for null is faster than strict checking for each of null/undefined/true/false\n    // checking null first, then calling typeof, is faster than vice-versa\n    return value != null && typeof value == 'object';\n}\n/**\nRecursively copy a value.\n\n@param source - should be a JavaScript primitive, Array, Date, or (plain old) Object.\n@returns copy of source where every Array and Object have been recursively\n         reconstructed from their constituent elements\n*/\nfunction clone(source) {\n    if (!isNonPrimitive(source)) {\n        // short-circuiting is faster than a single return\n        return source;\n    }\n    // x.constructor == Array is the fastest way to check if x is an Array\n    if (source.constructor == Array) {\n        // construction via imperative for-loop is faster than source.map(arrayVsObject)\n        var length_1 = source.length;\n        // setting the Array length during construction is faster than just `[]` or `new Array()`\n        var arrayTarget = new Array(length_1);\n        for (var i = 0; i < length_1; i++) {\n            arrayTarget[i] = clone(source[i]);\n        }\n        return arrayTarget;\n    }\n    // Date\n    if (source.constructor == Date) {\n        var dateTarget = new Date(+source);\n        return dateTarget;\n    }\n    // Object\n    var objectTarget = {};\n    // declaring the variable (with const) inside the loop is faster\n    for (var key in source) {\n        // hasOwnProperty costs a bit of performance, but it's semantically necessary\n        // using a global helper is MUCH faster than calling source.hasOwnProperty(key)\n        if (exports.hasOwnProperty.call(source, key)) {\n            objectTarget[key] = clone(source[key]);\n        }\n    }\n    return objectTarget;\n}\nexports.clone = clone;\n"},"lineCount":64}},"error":null,"hash":"85571eef2384b22dd17b36f6e616bc06","cacheData":{"env":{}}}