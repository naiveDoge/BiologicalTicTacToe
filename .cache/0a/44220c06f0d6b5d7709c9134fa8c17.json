{"id":"node_modules/rfc6902/patch.js","dependencies":[{"name":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\package.json","includedInParent":true,"mtime":1672826403432},{"name":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\package.json","includedInParent":true,"mtime":1672823284034},{"name":"./pointer","loc":{"line":19,"column":24,"index":1057},"parent":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\patch.js","resolved":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\pointer.js"},{"name":"./util","loc":{"line":20,"column":21,"index":1092},"parent":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\patch.js","resolved":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\util.js"},{"name":"./diff","loc":{"line":21,"column":21,"index":1124},"parent":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\patch.js","resolved":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\diff.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apply = exports.InvalidOperationError = exports.test = exports.copy = exports.move = exports.replace = exports.remove = exports.add = exports.TestError = exports.MissingError = void 0;\nvar pointer_1 = require(\"./pointer\");\nvar util_1 = require(\"./util\");\nvar diff_1 = require(\"./diff\");\nvar MissingError = /** @class */ (function (_super) {\n    __extends(MissingError, _super);\n    function MissingError(path) {\n        var _this = _super.call(this, \"Value required at path: \" + path) || this;\n        _this.path = path;\n        _this.name = 'MissingError';\n        return _this;\n    }\n    return MissingError;\n}(Error));\nexports.MissingError = MissingError;\nvar TestError = /** @class */ (function (_super) {\n    __extends(TestError, _super);\n    function TestError(actual, expected) {\n        var _this = _super.call(this, \"Test failed: \" + actual + \" != \" + expected) || this;\n        _this.actual = actual;\n        _this.expected = expected;\n        _this.name = 'TestError';\n        return _this;\n    }\n    return TestError;\n}(Error));\nexports.TestError = TestError;\nfunction _add(object, key, value) {\n    if (Array.isArray(object)) {\n        // `key` must be an index\n        if (key == '-') {\n            object.push(value);\n        }\n        else {\n            var index = parseInt(key, 10);\n            object.splice(index, 0, value);\n        }\n    }\n    else {\n        object[key] = value;\n    }\n}\nfunction _remove(object, key) {\n    if (Array.isArray(object)) {\n        // '-' syntax doesn't make sense when removing\n        var index = parseInt(key, 10);\n        object.splice(index, 1);\n    }\n    else {\n        // not sure what the proper behavior is when path = ''\n        delete object[key];\n    }\n}\n/**\n>  o  If the target location specifies an array index, a new value is\n>     inserted into the array at the specified index.\n>  o  If the target location specifies an object member that does not\n>     already exist, a new member is added to the object.\n>  o  If the target location specifies an object member that does exist,\n>     that member's value is replaced.\n*/\nfunction add(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    // it's not exactly a \"MissingError\" in the same way that `remove` is -- more like a MissingParent, or something\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _add(endpoint.parent, endpoint.key, util_1.clone(operation.value));\n    return null;\n}\nexports.add = add;\n/**\n> The \"remove\" operation removes the value at the target location.\n> The target location MUST exist for the operation to be successful.\n*/\nfunction remove(object, operation) {\n    // endpoint has parent, key, and value properties\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.value === undefined) {\n        return new MissingError(operation.path);\n    }\n    // not sure what the proper behavior is when path = ''\n    _remove(endpoint.parent, endpoint.key);\n    return null;\n}\nexports.remove = remove;\n/**\n> The \"replace\" operation replaces the value at the target location\n> with a new value.  The operation object MUST contain a \"value\" member\n> whose content specifies the replacement value.\n> The target location MUST exist for the operation to be successful.\n\n> This operation is functionally identical to a \"remove\" operation for\n> a value, followed immediately by an \"add\" operation at the same\n> location with the replacement value.\n\nEven more simply, it's like the add operation with an existence check.\n*/\nfunction replace(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === null) {\n        return new MissingError(operation.path);\n    }\n    // this existence check treats arrays as a special case\n    if (Array.isArray(endpoint.parent)) {\n        if (parseInt(endpoint.key, 10) >= endpoint.parent.length) {\n            return new MissingError(operation.path);\n        }\n    }\n    else if (endpoint.value === undefined) {\n        return new MissingError(operation.path);\n    }\n    endpoint.parent[endpoint.key] = operation.value;\n    return null;\n}\nexports.replace = replace;\n/**\n> The \"move\" operation removes the value at a specified location and\n> adds it to the target location.\n> The operation object MUST contain a \"from\" member, which is a string\n> containing a JSON Pointer value that references the location in the\n> target document to move the value from.\n> This operation is functionally identical to a \"remove\" operation on\n> the \"from\" location, followed immediately by an \"add\" operation at\n> the target location with the value that was just removed.\n\n> The \"from\" location MUST NOT be a proper prefix of the \"path\"\n> location; i.e., a location cannot be moved into one of its children.\n\nTODO: throw if the check described in the previous paragraph fails.\n*/\nfunction move(object, operation) {\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n    if (from_endpoint.value === undefined) {\n        return new MissingError(operation.from);\n    }\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _remove(from_endpoint.parent, from_endpoint.key);\n    _add(endpoint.parent, endpoint.key, from_endpoint.value);\n    return null;\n}\nexports.move = move;\n/**\n> The \"copy\" operation copies the value at a specified location to the\n> target location.\n> The operation object MUST contain a \"from\" member, which is a string\n> containing a JSON Pointer value that references the location in the\n> target document to copy the value from.\n> The \"from\" location MUST exist for the operation to be successful.\n\n> This operation is functionally identical to an \"add\" operation at the\n> target location using the value specified in the \"from\" member.\n\nAlternatively, it's like 'move' without the 'remove'.\n*/\nfunction copy(object, operation) {\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n    if (from_endpoint.value === undefined) {\n        return new MissingError(operation.from);\n    }\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _add(endpoint.parent, endpoint.key, util_1.clone(from_endpoint.value));\n    return null;\n}\nexports.copy = copy;\n/**\n> The \"test\" operation tests that a value at the target location is\n> equal to a specified value.\n> The operation object MUST contain a \"value\" member that conveys the\n> value to be compared to the target location's value.\n> The target location MUST be equal to the \"value\" value for the\n> operation to be considered successful.\n*/\nfunction test(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    // TODO: this diffAny(...).length usage could/should be lazy\n    if (diff_1.diffAny(endpoint.value, operation.value, new pointer_1.Pointer()).length) {\n        return new TestError(endpoint.value, operation.value);\n    }\n    return null;\n}\nexports.test = test;\nvar InvalidOperationError = /** @class */ (function (_super) {\n    __extends(InvalidOperationError, _super);\n    function InvalidOperationError(operation) {\n        var _this = _super.call(this, \"Invalid operation: \" + operation.op) || this;\n        _this.operation = operation;\n        _this.name = 'InvalidOperationError';\n        return _this;\n    }\n    return InvalidOperationError;\n}(Error));\nexports.InvalidOperationError = InvalidOperationError;\n/**\nSwitch on `operation.op`, applying the corresponding patch function for each\ncase to `object`.\n*/\nfunction apply(object, operation) {\n    // not sure why TypeScript can't infer typesafety of:\n    //   {add, remove, replace, move, copy, test}[operation.op](object, operation)\n    // (seems like a bug)\n    switch (operation.op) {\n        case 'add': return add(object, operation);\n        case 'remove': return remove(object, operation);\n        case 'replace': return replace(object, operation);\n        case 'move': return move(object, operation);\n        case 'copy': return copy(object, operation);\n        case 'test': return test(object, operation);\n    }\n    return new InvalidOperationError(operation);\n}\nexports.apply = apply;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rfc6902/patch.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/rfc6902/patch.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}}],"sources":{"node_modules/rfc6902/patch.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apply = exports.InvalidOperationError = exports.test = exports.copy = exports.move = exports.replace = exports.remove = exports.add = exports.TestError = exports.MissingError = void 0;\nvar pointer_1 = require(\"./pointer\");\nvar util_1 = require(\"./util\");\nvar diff_1 = require(\"./diff\");\nvar MissingError = /** @class */ (function (_super) {\n    __extends(MissingError, _super);\n    function MissingError(path) {\n        var _this = _super.call(this, \"Value required at path: \" + path) || this;\n        _this.path = path;\n        _this.name = 'MissingError';\n        return _this;\n    }\n    return MissingError;\n}(Error));\nexports.MissingError = MissingError;\nvar TestError = /** @class */ (function (_super) {\n    __extends(TestError, _super);\n    function TestError(actual, expected) {\n        var _this = _super.call(this, \"Test failed: \" + actual + \" != \" + expected) || this;\n        _this.actual = actual;\n        _this.expected = expected;\n        _this.name = 'TestError';\n        return _this;\n    }\n    return TestError;\n}(Error));\nexports.TestError = TestError;\nfunction _add(object, key, value) {\n    if (Array.isArray(object)) {\n        // `key` must be an index\n        if (key == '-') {\n            object.push(value);\n        }\n        else {\n            var index = parseInt(key, 10);\n            object.splice(index, 0, value);\n        }\n    }\n    else {\n        object[key] = value;\n    }\n}\nfunction _remove(object, key) {\n    if (Array.isArray(object)) {\n        // '-' syntax doesn't make sense when removing\n        var index = parseInt(key, 10);\n        object.splice(index, 1);\n    }\n    else {\n        // not sure what the proper behavior is when path = ''\n        delete object[key];\n    }\n}\n/**\n>  o  If the target location specifies an array index, a new value is\n>     inserted into the array at the specified index.\n>  o  If the target location specifies an object member that does not\n>     already exist, a new member is added to the object.\n>  o  If the target location specifies an object member that does exist,\n>     that member's value is replaced.\n*/\nfunction add(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    // it's not exactly a \"MissingError\" in the same way that `remove` is -- more like a MissingParent, or something\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _add(endpoint.parent, endpoint.key, util_1.clone(operation.value));\n    return null;\n}\nexports.add = add;\n/**\n> The \"remove\" operation removes the value at the target location.\n> The target location MUST exist for the operation to be successful.\n*/\nfunction remove(object, operation) {\n    // endpoint has parent, key, and value properties\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.value === undefined) {\n        return new MissingError(operation.path);\n    }\n    // not sure what the proper behavior is when path = ''\n    _remove(endpoint.parent, endpoint.key);\n    return null;\n}\nexports.remove = remove;\n/**\n> The \"replace\" operation replaces the value at the target location\n> with a new value.  The operation object MUST contain a \"value\" member\n> whose content specifies the replacement value.\n> The target location MUST exist for the operation to be successful.\n\n> This operation is functionally identical to a \"remove\" operation for\n> a value, followed immediately by an \"add\" operation at the same\n> location with the replacement value.\n\nEven more simply, it's like the add operation with an existence check.\n*/\nfunction replace(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === null) {\n        return new MissingError(operation.path);\n    }\n    // this existence check treats arrays as a special case\n    if (Array.isArray(endpoint.parent)) {\n        if (parseInt(endpoint.key, 10) >= endpoint.parent.length) {\n            return new MissingError(operation.path);\n        }\n    }\n    else if (endpoint.value === undefined) {\n        return new MissingError(operation.path);\n    }\n    endpoint.parent[endpoint.key] = operation.value;\n    return null;\n}\nexports.replace = replace;\n/**\n> The \"move\" operation removes the value at a specified location and\n> adds it to the target location.\n> The operation object MUST contain a \"from\" member, which is a string\n> containing a JSON Pointer value that references the location in the\n> target document to move the value from.\n> This operation is functionally identical to a \"remove\" operation on\n> the \"from\" location, followed immediately by an \"add\" operation at\n> the target location with the value that was just removed.\n\n> The \"from\" location MUST NOT be a proper prefix of the \"path\"\n> location; i.e., a location cannot be moved into one of its children.\n\nTODO: throw if the check described in the previous paragraph fails.\n*/\nfunction move(object, operation) {\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n    if (from_endpoint.value === undefined) {\n        return new MissingError(operation.from);\n    }\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _remove(from_endpoint.parent, from_endpoint.key);\n    _add(endpoint.parent, endpoint.key, from_endpoint.value);\n    return null;\n}\nexports.move = move;\n/**\n> The \"copy\" operation copies the value at a specified location to the\n> target location.\n> The operation object MUST contain a \"from\" member, which is a string\n> containing a JSON Pointer value that references the location in the\n> target document to copy the value from.\n> The \"from\" location MUST exist for the operation to be successful.\n\n> This operation is functionally identical to an \"add\" operation at the\n> target location using the value specified in the \"from\" member.\n\nAlternatively, it's like 'move' without the 'remove'.\n*/\nfunction copy(object, operation) {\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n    if (from_endpoint.value === undefined) {\n        return new MissingError(operation.from);\n    }\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _add(endpoint.parent, endpoint.key, util_1.clone(from_endpoint.value));\n    return null;\n}\nexports.copy = copy;\n/**\n> The \"test\" operation tests that a value at the target location is\n> equal to a specified value.\n> The operation object MUST contain a \"value\" member that conveys the\n> value to be compared to the target location's value.\n> The target location MUST be equal to the \"value\" value for the\n> operation to be considered successful.\n*/\nfunction test(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    // TODO: this diffAny(...).length usage could/should be lazy\n    if (diff_1.diffAny(endpoint.value, operation.value, new pointer_1.Pointer()).length) {\n        return new TestError(endpoint.value, operation.value);\n    }\n    return null;\n}\nexports.test = test;\nvar InvalidOperationError = /** @class */ (function (_super) {\n    __extends(InvalidOperationError, _super);\n    function InvalidOperationError(operation) {\n        var _this = _super.call(this, \"Invalid operation: \" + operation.op) || this;\n        _this.operation = operation;\n        _this.name = 'InvalidOperationError';\n        return _this;\n    }\n    return InvalidOperationError;\n}(Error));\nexports.InvalidOperationError = InvalidOperationError;\n/**\nSwitch on `operation.op`, applying the corresponding patch function for each\ncase to `object`.\n*/\nfunction apply(object, operation) {\n    // not sure why TypeScript can't infer typesafety of:\n    //   {add, remove, replace, move, copy, test}[operation.op](object, operation)\n    // (seems like a bug)\n    switch (operation.op) {\n        case 'add': return add(object, operation);\n        case 'remove': return remove(object, operation);\n        case 'replace': return replace(object, operation);\n        case 'move': return move(object, operation);\n        case 'copy': return copy(object, operation);\n        case 'test': return test(object, operation);\n    }\n    return new InvalidOperationError(operation);\n}\nexports.apply = apply;\n"},"lineCount":236}},"error":null,"hash":"0fc7da36d0d3cdc27bc007394fcb53ad","cacheData":{"env":{}}}