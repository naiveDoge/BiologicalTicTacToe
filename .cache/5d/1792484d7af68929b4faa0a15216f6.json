{"id":"node_modules/rfc6902/pointer.js","dependencies":[{"name":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\package.json","includedInParent":true,"mtime":1672826403432},{"name":"C:\\Users\\Zhou\\Documents\\BiologicalTicTacToe\\node_modules\\rfc6902\\package.json","includedInParent":true,"mtime":1672823284034}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pointer = void 0;\n/**\nUnescape token part of a JSON Pointer string\n\n`token` should *not* contain any '/' characters.\n\n> Evaluation of each reference token begins by decoding any escaped\n> character sequence.  This is performed by first transforming any\n> occurrence of the sequence '~1' to '/', and then transforming any\n> occurrence of the sequence '~0' to '~'.  By performing the\n> substitutions in this order, an implementation avoids the error of\n> turning '~01' first into '~1' and then into '/', which would be\n> incorrect (the string '~01' correctly becomes '~1' after\n> transformation).\n\nHere's my take:\n\n~1 is unescaped with higher priority than ~0 because it is a lower-order escape character.\nI say \"lower order\" because '/' needs escaping due to the JSON Pointer serialization technique.\nWhereas, '~' is escaped because escaping '/' uses the '~' character.\n*/\nfunction unescape(token) {\n    return token.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n/** Escape token part of a JSON Pointer string\n\n> '~' needs to be encoded as '~0' and '/'\n> needs to be encoded as '~1' when these characters appear in a\n> reference token.\n\nThis is the exact inverse of `unescape()`, so the reverse replacements must take place in reverse order.\n*/\nfunction escape(token) {\n    return token.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n/**\nJSON Pointer representation\n*/\nvar Pointer = /** @class */ (function () {\n    function Pointer(tokens) {\n        if (tokens === void 0) { tokens = ['']; }\n        this.tokens = tokens;\n    }\n    /**\n    `path` *must* be a properly escaped string.\n    */\n    Pointer.fromJSON = function (path) {\n        var tokens = path.split('/').map(unescape);\n        if (tokens[0] !== '')\n            throw new Error(\"Invalid JSON Pointer: \" + path);\n        return new Pointer(tokens);\n    };\n    Pointer.prototype.toString = function () {\n        return this.tokens.map(escape).join('/');\n    };\n    /**\n    Returns an object with 'parent', 'key', and 'value' properties.\n    In the special case that this Pointer's path == \"\",\n    this object will be {parent: null, key: '', value: object}.\n    Otherwise, parent and key will have the property such that parent[key] == value.\n    */\n    Pointer.prototype.evaluate = function (object) {\n        var parent = null;\n        var key = '';\n        var value = object;\n        for (var i = 1, l = this.tokens.length; i < l; i++) {\n            parent = value;\n            key = this.tokens[i];\n            // not sure if this the best way to handle non-existant paths...\n            value = (parent || {})[key];\n        }\n        return { parent: parent, key: key, value: value };\n    };\n    Pointer.prototype.get = function (object) {\n        return this.evaluate(object).value;\n    };\n    Pointer.prototype.set = function (object, value) {\n        var cursor = object;\n        for (var i = 1, l = this.tokens.length - 1, token = this.tokens[i]; i < l; i++) {\n            // not sure if this the best way to handle non-existant paths...\n            cursor = (cursor || {})[token];\n        }\n        if (cursor) {\n            cursor[this.tokens[this.tokens.length - 1]] = value;\n        }\n    };\n    Pointer.prototype.push = function (token) {\n        // mutable\n        this.tokens.push(token);\n    };\n    /**\n    `token` should be a String. It'll be coerced to one anyway.\n  \n    immutable (shallowly)\n    */\n    Pointer.prototype.add = function (token) {\n        var tokens = this.tokens.concat(String(token));\n        return new Pointer(tokens);\n    };\n    return Pointer;\n}());\nexports.Pointer = Pointer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rfc6902/pointer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/rfc6902/pointer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}}],"sources":{"node_modules/rfc6902/pointer.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pointer = void 0;\n/**\nUnescape token part of a JSON Pointer string\n\n`token` should *not* contain any '/' characters.\n\n> Evaluation of each reference token begins by decoding any escaped\n> character sequence.  This is performed by first transforming any\n> occurrence of the sequence '~1' to '/', and then transforming any\n> occurrence of the sequence '~0' to '~'.  By performing the\n> substitutions in this order, an implementation avoids the error of\n> turning '~01' first into '~1' and then into '/', which would be\n> incorrect (the string '~01' correctly becomes '~1' after\n> transformation).\n\nHere's my take:\n\n~1 is unescaped with higher priority than ~0 because it is a lower-order escape character.\nI say \"lower order\" because '/' needs escaping due to the JSON Pointer serialization technique.\nWhereas, '~' is escaped because escaping '/' uses the '~' character.\n*/\nfunction unescape(token) {\n    return token.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n/** Escape token part of a JSON Pointer string\n\n> '~' needs to be encoded as '~0' and '/'\n> needs to be encoded as '~1' when these characters appear in a\n> reference token.\n\nThis is the exact inverse of `unescape()`, so the reverse replacements must take place in reverse order.\n*/\nfunction escape(token) {\n    return token.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n/**\nJSON Pointer representation\n*/\nvar Pointer = /** @class */ (function () {\n    function Pointer(tokens) {\n        if (tokens === void 0) { tokens = ['']; }\n        this.tokens = tokens;\n    }\n    /**\n    `path` *must* be a properly escaped string.\n    */\n    Pointer.fromJSON = function (path) {\n        var tokens = path.split('/').map(unescape);\n        if (tokens[0] !== '')\n            throw new Error(\"Invalid JSON Pointer: \" + path);\n        return new Pointer(tokens);\n    };\n    Pointer.prototype.toString = function () {\n        return this.tokens.map(escape).join('/');\n    };\n    /**\n    Returns an object with 'parent', 'key', and 'value' properties.\n    In the special case that this Pointer's path == \"\",\n    this object will be {parent: null, key: '', value: object}.\n    Otherwise, parent and key will have the property such that parent[key] == value.\n    */\n    Pointer.prototype.evaluate = function (object) {\n        var parent = null;\n        var key = '';\n        var value = object;\n        for (var i = 1, l = this.tokens.length; i < l; i++) {\n            parent = value;\n            key = this.tokens[i];\n            // not sure if this the best way to handle non-existant paths...\n            value = (parent || {})[key];\n        }\n        return { parent: parent, key: key, value: value };\n    };\n    Pointer.prototype.get = function (object) {\n        return this.evaluate(object).value;\n    };\n    Pointer.prototype.set = function (object, value) {\n        var cursor = object;\n        for (var i = 1, l = this.tokens.length - 1, token = this.tokens[i]; i < l; i++) {\n            // not sure if this the best way to handle non-existant paths...\n            cursor = (cursor || {})[token];\n        }\n        if (cursor) {\n            cursor[this.tokens[this.tokens.length - 1]] = value;\n        }\n    };\n    Pointer.prototype.push = function (token) {\n        // mutable\n        this.tokens.push(token);\n    };\n    /**\n    `token` should be a String. It'll be coerced to one anyway.\n  \n    immutable (shallowly)\n    */\n    Pointer.prototype.add = function (token) {\n        var tokens = this.tokens.concat(String(token));\n        return new Pointer(tokens);\n    };\n    return Pointer;\n}());\nexports.Pointer = Pointer;\n"},"lineCount":105}},"error":null,"hash":"43f7c5d53736057a43009d4b0bcf9474","cacheData":{"env":{}}}